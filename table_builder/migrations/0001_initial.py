# Generated by Django 3.2 on 2023-02-08 13:36

from django.db import migrations, models
import django.db.models.deletion
import table_builder.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoFillTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='имя')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='описание')),
            ],
            options={
                'verbose_name': 'шаблон автозаполнения',
                'verbose_name_plural': 'шаблоны автозаполнения',
            },
            bases=(table_builder.models.ColumnRelationMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dialect', models.CharField(choices=[('postgresql', 'PostgreSQL')], max_length=255, verbose_name='диалект')),
                ('user', models.CharField(blank=True, max_length=255, verbose_name='имя пользователя')),
                ('password', models.CharField(blank=True, max_length=128, verbose_name='пароль')),
                ('host', models.CharField(blank=True, max_length=255, verbose_name='хост')),
                ('port', models.PositiveIntegerField(blank=True, null=True, verbose_name='порт')),
                ('dbname', models.CharField(max_length=255, verbose_name='название БД')),
                ('alias', models.CharField(max_length=255, verbose_name='псевдоним')),
                ('auto_fill_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='table_builder.autofilltemplate', verbose_name='шаблон автозаполнения')),
            ],
            options={
                'verbose_name': 'база данных',
                'verbose_name_plural': 'базы данных',
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='название таблицы')),
                ('alias', models.CharField(blank=True, max_length=255, verbose_name='псевдоним')),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='table_builder.database', verbose_name='база данных')),
            ],
            options={
                'verbose_name': 'таблица',
                'verbose_name_plural': 'таблицы',
            },
            bases=(table_builder.models.ColumnRelationMixin, models.Model),
        ),
        migrations.CreateModel(
            name='IntegerColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show', models.BooleanField(default=True, verbose_name='показать в результатах запроса')),
                ('alias', models.CharField(blank=True, max_length=255, verbose_name='псевдоним')),
                ('order_predicate', models.CharField(blank=True, choices=[('', '---'), ('ASC', 'По возрастанию'), ('DESC', 'По убыванию')], max_length=255, verbose_name='условие сортировки')),
                ('order_priority', models.IntegerField(default=1, verbose_name='приоритет сортировки')),
                ('where_not', models.BooleanField(verbose_name='не')),
                ('where_predicate', models.CharField(blank=True, choices=[('', '---'), ('=', 'Равно'), ('>', 'Больше'), ('<', 'Меньше')], max_length=255, verbose_name='условие фильтрации')),
                ('where_value', models.IntegerField(blank=True, null=True, verbose_name='значение фильтрации')),
                ('object_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255, verbose_name='имя столбца')),
                ('position', models.IntegerField(verbose_name='позиция')),
                ('visible', models.BooleanField(default=True, verbose_name='видим на форме')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'integer',
            },
        ),
        migrations.CreateModel(
            name='FloatColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show', models.BooleanField(default=True, verbose_name='показать в результатах запроса')),
                ('alias', models.CharField(blank=True, max_length=255, verbose_name='псевдоним')),
                ('order_predicate', models.CharField(blank=True, choices=[('', '---'), ('ASC', 'По возрастанию'), ('DESC', 'По убыванию')], max_length=255, verbose_name='условие сортировки')),
                ('order_priority', models.IntegerField(default=1, verbose_name='приоритет сортировки')),
                ('where_not', models.BooleanField(verbose_name='не')),
                ('where_predicate', models.CharField(blank=True, choices=[('', '---'), ('=', 'Равно'), ('>', 'Больше'), ('<', 'Меньше')], max_length=255, verbose_name='условие фильтрации')),
                ('where_value', models.FloatField(blank=True, null=True, verbose_name='значение фильтрации')),
                ('object_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255, verbose_name='имя столбца')),
                ('position', models.IntegerField(verbose_name='позиция')),
                ('visible', models.BooleanField(default=True, verbose_name='видим на форме')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'float',
            },
        ),
        migrations.CreateModel(
            name='DurationColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show', models.BooleanField(default=True, verbose_name='показать в результатах запроса')),
                ('alias', models.CharField(blank=True, max_length=255, verbose_name='псевдоним')),
                ('order_predicate', models.CharField(blank=True, choices=[('', '---'), ('ASC', 'По возрастанию'), ('DESC', 'По убыванию')], max_length=255, verbose_name='условие сортировки')),
                ('order_priority', models.IntegerField(default=1, verbose_name='приоритет сортировки')),
                ('where_not', models.BooleanField(verbose_name='не')),
                ('where_from_value', models.DurationField(blank=True, null=True, verbose_name='от')),
                ('where_to_value', models.DurationField(blank=True, null=True, verbose_name='до')),
                ('object_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255, verbose_name='имя столбца')),
                ('position', models.IntegerField(verbose_name='позиция')),
                ('visible', models.BooleanField(default=True, verbose_name='видим на форме')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'duration',
            },
        ),
        migrations.CreateModel(
            name='DateTimeColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show', models.BooleanField(default=True, verbose_name='показать в результатах запроса')),
                ('alias', models.CharField(blank=True, max_length=255, verbose_name='псевдоним')),
                ('order_predicate', models.CharField(blank=True, choices=[('', '---'), ('ASC', 'По возрастанию'), ('DESC', 'По убыванию')], max_length=255, verbose_name='условие сортировки')),
                ('order_priority', models.IntegerField(default=1, verbose_name='приоритет сортировки')),
                ('where_not', models.BooleanField(verbose_name='не')),
                ('where_from_value', models.DateTimeField(blank=True, null=True, verbose_name='от')),
                ('where_to_value', models.DateTimeField(blank=True, null=True, verbose_name='до')),
                ('object_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255, verbose_name='имя столбца')),
                ('position', models.IntegerField(verbose_name='позиция')),
                ('visible', models.BooleanField(default=True, verbose_name='видим на форме')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'datetime',
            },
        ),
        migrations.CreateModel(
            name='DateColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show', models.BooleanField(default=True, verbose_name='показать в результатах запроса')),
                ('alias', models.CharField(blank=True, max_length=255, verbose_name='псевдоним')),
                ('order_predicate', models.CharField(blank=True, choices=[('', '---'), ('ASC', 'По возрастанию'), ('DESC', 'По убыванию')], max_length=255, verbose_name='условие сортировки')),
                ('order_priority', models.IntegerField(default=1, verbose_name='приоритет сортировки')),
                ('where_not', models.BooleanField(verbose_name='не')),
                ('where_from_value', models.DateField(blank=True, null=True, verbose_name='от')),
                ('where_to_value', models.DateField(blank=True, null=True, verbose_name='до')),
                ('object_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255, verbose_name='имя столбца')),
                ('position', models.IntegerField(verbose_name='позиция')),
                ('visible', models.BooleanField(default=True, verbose_name='видим на форме')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'date',
            },
        ),
        migrations.CreateModel(
            name='CharColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show', models.BooleanField(default=True, verbose_name='показать в результатах запроса')),
                ('alias', models.CharField(blank=True, max_length=255, verbose_name='псевдоним')),
                ('order_predicate', models.CharField(blank=True, choices=[('', '---'), ('ASC', 'По возрастанию'), ('DESC', 'По убыванию')], max_length=255, verbose_name='условие сортировки')),
                ('order_priority', models.IntegerField(default=1, verbose_name='приоритет сортировки')),
                ('where_not', models.BooleanField(verbose_name='не')),
                ('where_predicate', models.CharField(blank=True, choices=[('', '---'), ('=', 'Равно'), ('%LIKE%', 'Содержит'), ('LIKE%', 'Начинается'), ('%LIKE', 'Заканчивается')], max_length=255, verbose_name='условие фильтрации')),
                ('where_value', models.CharField(blank=True, max_length=255, verbose_name='значение фильтрации')),
                ('object_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255, verbose_name='имя столбца')),
                ('position', models.IntegerField(verbose_name='позиция')),
                ('visible', models.BooleanField(default=True, verbose_name='видим на форме')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'char',
            },
        ),
    ]
